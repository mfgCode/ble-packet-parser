// Generated by CoffeeScript 1.4.0
var assert, packet1, packet2, parsedPacket, parser;

assert = require('assert');

parser = require("../../ble-packet-parser");

packet1 = ["04", "3E", "20", "02", "01", "03", "01", "9A", "8B", "7C", "6D", "5E", "4F", "16", "02", "01", "04", "0D", "09", "48", "65", "6C", "6C", "6F", "20", "57", "6F", "72", "6C", "64", "21", "04", "16", "0A", "11", "48", "BF"];

packet2 = ["04", "3E", "3F", "02", "02", "03", "01", "9A", "8B", "7C", "6D", "5E", "4F", "16", "02", "01", "04", "0D", "09", "48", "65", "6C", "6C", "6F", "20", "57", "6F", "72", "6C", "64", "21", "04", "16", "0A", "11", "48", "BF", "03", "01", "9A", "8B", "7C", "6D", "5E", "4F", "10", "02", "01", "04", "07", "09", "57", "6F", "72", "6C", "64", "21", "04", "16", "0A", "11", "48", "BF"];

parsedPacket = parser(packet1);

assert.equal(parsedPacket.Event_Code, 0x3E, "EventCode equals 0x3E");

assert.equal(parsedPacket.Subevent_Code, 0x02, "SubeventCode equals 0x02");

assert.equal(parsedPacket.Reports.length, 0x01, "Number of Reports equals 1");

assert.notEqual(parsedPacket.Reports.length, 0x02, "Number of Reports equals NOT 2");

assert.equal(parsedPacket.Reports[0].data[1].data, "Hello World!", "Report_0: Full Local Name is Hello World!");

parsedPacket = parser(packet2);

assert.equal(parsedPacket.Event_Code, 0x3E, "EventCode equals 0x3E");

assert.equal(parsedPacket.Subevent_Code, 0x02, "SubeventCode equals 0x02");

assert.equal(parsedPacket.Reports.length, 0x02, "Number of Reports equals 2");

assert.notEqual(parsedPacket.Reports.length, 0x01, "Number of Reports equals NOT 1");

assert.equal(parsedPacket.Reports[0].data[1].data, "Hello World!", "Report_0: Full Local Name is Hello World!");

assert.equal(parsedPacket.Reports[1].data[1].data, "World!", "Report_1: Full Local Name is World!");
